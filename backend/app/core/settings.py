"""
Django settings for app project.

Generated by 'django-admin startproject' using Django 5.2.5.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from os import environ
from pathlib import Path

import cloudinary
from django.core.management.utils import get_random_secret_key

##############################################################################
# GENERAL
##############################################################################

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

SECRET_KEY = environ.get("SECRET_KEY", get_random_secret_key())

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = environ.get("DEBUG", "") == "1"

ALLOWED_HOSTS = ["localhost", "api", "127.0.0.1"]

CSRF_TRUSTED_ORIGINS = [
    "http://localhost:8000",
    "http://127.0.0.1:8000",
]

ROOT_URLCONF = "app.core.urls"

WSGI_APPLICATION = "app.core.wsgi.application"

##############################################################################
# Application definition
##############################################################################

INSTALLED_APPS = [
    # Unfold Apps
    "unfold",  # before django.contrib.admin
    "unfold.contrib.filters",  # optional, if special filters are needed
    "unfold.contrib.forms",  # optional, if special form elements are needed
    "unfold.contrib.inlines",  # optional, if special inlines are needed
    # Django Default Apps
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    # Third Party Apps
    "rest_framework",
    "cloudinary",
    "django_filters",
    "drf_spectacular",
    'django_q',
    # Local Apps
    "app.dogs_api",
    "app.vet_api",
]

##############################################################################
# MIDDLEWARE
##############################################################################

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.locale.LocaleMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]


##############################################################################
# TEMPLATES
##############################################################################

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

##############################################################################
# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases
##############################################################################

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.postgresql",
        "USER": environ.get("DATABASE_USER"),
        "PASSWORD": environ.get("DATABASE_PASSWORD"),
        "NAME": environ.get("DATABASE_NAME"),
        "HOST": environ.get("DATABASE_HOST"),
        "PORT": environ.get("DATABASE_PORT"),
        "TEST": {
            "NAME": "test",
        },
    }
}

# Default primary key field type
DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"


##############################################################################
# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators
##############################################################################

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


##############################################################################
# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/
##############################################################################

LANGUAGE_CODE = "es"

LANGUAGES = [
    ("es", "Español"),
]

TIME_ZONE = "America/Mexico_City"

USE_I18N = True

USE_TZ = True


##############################################################################
# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/
##############################################################################
STATIC_URL = "static/"
# STATIC_ROOT = BASE_DIR / "staticfiles"
STATICFILES_DIRS = [BASE_DIR / "static"]

##############################################################################
# Cloudinary Configuration
# https://cloudinary.com/documentation/django_integration
##############################################################################
cloudinary.config(
    cloud_name=environ.get("CLOUDINARY_CLOUD_NAME"),
    api_key=environ.get("CLOUDINARY_API_KEY"),
    api_secret=environ.get("CLOUDINARY_API_SECRET"),
)
CLOUDINARY_FOLDER = environ.get("CLOUDINARY_FOLDER", "dev")
CLOUDINARY_TAG = environ.get("CLOUDINARY_TAG", "dev")
##############################################################################
# DJANGO REST FRAMEWORK CONFIGURATION
##############################################################################
REST_FRAMEWORK = {
    "DEFAULT_SCHEMA_CLASS": "drf_spectacular.openapi.AutoSchema",
    "DEFAULT_AUTHENTICATION_CLASSES": [],
    "DEFAULT_PERMISSION_CLASSES": [
        "rest_framework.permissions.AllowAny"
    ],
}
SESSION_COOKIE_AGE = 1209600
SESSION_EXPIRE_AT_BROWSER_CLOSE = False
##############################################################################
# Email configuration
##############################################################################
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_USE_SSL = False
EMAIL_HOST_USER = environ.get("GMAIL_ACCOUNT")
EMAIL_HOST_PASSWORD = environ.get("GOOGLE_APP_PASSWORD")
DEFAULT_FROM_EMAIL = EMAIL_HOST_USER
DESTINATARY_EMAIL = environ.get("DESTINATARY_EMAIL","").split(",")
##############################################################################
# Django-Q configuration
##############################################################################
Q_CLUSTER = {
    'name': 'DjangoQCluster',
    'workers': 2,
    'timeout': 90,
    'retry': 120,
    'queue_limit': 50,
    'bulk': 10,
    'redis': {
        'host': 'redis',
        'port': 6379,
        'db': 0,
    },
}
##############################################################################
# Unfold
##############################################################################
UNFOLD = {

    "SITE_TITLE": "Administración de Esperanza Canina",
    "SITE_HEADER": "Esperanza Canina",

    "SITE_DROPDOWN": [
        {
            "icon": "pets",
            "title": ("Sitio Web"),
            "link": "http://localhost:3000/",
        },

    ],
    "SITE_SYMBOL": "pets",
    "LOGIN": {
        # "image": lambda request: ("https://encrypted-tbn2.gstatic.com/images?q=tbn:ANd9GcQUUKb_E4DWBUWpOJDP_FSA3ZQOgPWoA8uOPOd3zo6TaU0MCXHarhW05900NPFBAVW0c2okk3jAVcMm6xvem1mSUZeYauVNTXAbl8qX0Q"),

    },

    "BORDER_RADIUS": "11px",
"COLORS": {
    "base": {

        "50": "oklch(98.5% .002 247.839)",
        "100": "oklch(96.7% .003 264.542)",
        "200": "oklch(92.8% .006 264.531)",
        "300": "oklch(87.2% .01 258.338)",
        "400": "oklch(70.7% .022 261.325)",
        "500": "oklch(55.1% .027 264.364)",
        "600": "oklch(44.6% .03 256.802)",
        "700": "oklch(37.3% .034 259.733)",
        "800": "oklch(27.8% .033 256.848)",
        "900": "oklch(21% .034 264.665)",
        "950": "oklch(13% .028 261.692)",
    },
    "primary": {

        "50": "oklch(96% .014 257.6)",
        "100": "oklch(93% .033 257.4)",
        "200": "oklch(88% .065 257.3)",
        "300": "oklch(81% .117 257.1)",
        "400": "oklch(71% .188 257.1)",
        "500": "oklch(62% .245 257)",
        "600": "oklch(54% .255 257)",
        "700": "oklch(47% .236 257.2)",
        "800": "oklch(41% .194 257.5)",
        "900": "oklch(35% .149 257.8)",
        "950": "oklch(28% .112 257.5)",
    },
    "font": {
        "subtle-light": "var(--color-base-500)",
        "subtle-dark": "var(--color-base-400)",
        "default-light": "var(--color-base-600)",
        "default-dark": "var(--color-base-300)",
        "important-light": "var(--color-base-900)",
        "important-dark": "var(--color-base-100)",
    },
},
}
