"""
Django settings for app project.

Generated by 'django-admin startproject' using Django 5.2.5.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from os import environ
from pathlib import Path

import cloudinary
from django.core.management.utils import get_random_secret_key

##############################################################################
# GENERAL
##############################################################################

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

SECRET_KEY = environ.get("SECRET_KEY", get_random_secret_key())

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = environ.get("DEBUG", "") == "1"

ALLOWED_HOSTS = ["localhost", "api"]

CSRF_TRUSTED_ORIGINS = [
    "http://localhost:8000",
    "http://127.0.0.1:8000",
]

ROOT_URLCONF = "app.core.urls"

WSGI_APPLICATION = "app.core.wsgi.application"

##############################################################################
# Application definition
##############################################################################

INSTALLED_APPS = [
    # Django Default Apps
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    # Third Party Apps
    "rest_framework",
    "cloudinary",
    "django_filters",
    "drf_spectacular",
    # Local Apps
    "app.dogs_api",
    "app.vet_api",
]

##############################################################################
# MIDDLEWARE
##############################################################################

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]


##############################################################################
# TEMPLATES
##############################################################################

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

##############################################################################
# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases
##############################################################################

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.postgresql",
        "USER": environ.get("DATABASE_USER", "postgres"),
        "PASSWORD": environ.get("DATABASE_PASSWORD", "change-password"),
        "NAME": environ.get("DATABASE_NAME", "patitas"),
        "HOST": environ.get("DATABASE_HOST", "db"),
        "PORT": environ.get("DATABASE_PORT", "5432"),
        "TEST": {
            "NAME": "test",
        },
    }
}

# Default primary key field type
DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"


##############################################################################
# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators
##############################################################################

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


##############################################################################
# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/
##############################################################################

LANGUAGE_CODE = "es-mx"

TIME_ZONE = "America/Mexico_City"

USE_I18N = True

USE_TZ = True


##############################################################################
# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/
##############################################################################
STATIC_URL = "static/"

##############################################################################
# Cloudinary Configuration
# https://cloudinary.com/documentation/django_integration
##############################################################################
cloudinary.config(
    cloud_name=environ.get("CLOUDINARY_CLOUD_NAME"),
    api_key=environ.get("CLOUDINARY_API_KEY"),
    api_secret=environ.get("CLOUDINARY_API_SECRET"),
)
CLOUDINARY_FOLDER = environ.get("CLOUDINARY_FOLDER", "dev")
CLOUDINARY_TAG = environ.get("CLOUDINARY_TAG", "dev")
##############################################################################
# DJANGO REST FRAMEWORK CONFIGURATION
##############################################################################
REST_FRAMEWORK = {
    "DEFAULT_SCHEMA_CLASS": "drf_spectacular.openapi.AutoSchema",
}
SESSION_COOKIE_AGE = 1209600  
SESSION_EXPIRE_AT_BROWSER_CLOSE = False