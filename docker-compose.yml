services:
  db:
    image: postgres
    volumes:
      - ./backend/sql/dev_only_db_seed.sql:/docker-entrypoint-initdb.d/init.sql
      - data:/var/lib/postgresql/data
    env_file:
      - backend/.env
    expose:
      - "5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 2s
      timeout: 2s
      retries: 10
  redis:
    image: redis:7
    container_name: redis
    ports:
      - "6379:6379" 
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping"]
      interval: 5s
      timeout: 2s
      retries: 10

  # frontend:
  #   build: ./frontend

  #   volumes:
  #     - ./frontend:/app
  #     - /app/node_modules
  #     - /app/.next
  #   ports:
  #     - "3000:3000"
  #   env_file:
  #     - ./frontend/.env.local
  #   depends_on:
  #     - "api"
  api:
    command: bash -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    build: 
      context: backend
    ports:
    - "8000:8000"
    volumes:
    - ./backend:/app
    env_file:
      - backend/.env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
  qcluster:
    build:
      context: backend
    command: python manage.py qcluster
    volumes:
      - ./backend:/app
    env_file:
      - backend/.env
    depends_on:
      redis:
        condition: service_healthy
      db:
        condition: service_healthy
    restart: always  


volumes:
  data: